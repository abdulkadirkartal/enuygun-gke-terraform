prometheus:
  nodeSelector:
    cloud.google.com/gke-nodepool: application-pool
  prometheusSpec:
    serviceMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelector: {}
    serviceMonitorNamespaceSelector: {}
    podMonitorSelector: {}
    podMonitorNamespaceSelector: {}
    retention: 15d
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
      limits:
        memory: 512Mi
        cpu: 200m

grafana:
  enabled: true
  adminPassword: admin
  persistence:
    enabled: true
    size: 10Gi
  nodeSelector:
    cloud.google.com/gke-nodepool: application-pool
  grafana.ini:
    unified_alerting:
      enabled: true
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards
  
  dashboards:
    default:
      pod-monitoring:
        json: |
          {
            "annotations": {
              "list": []
            },
            "editable": true,
            "fiscalYearStartMonth": 0,
            "graphTooltip": 0,
            "links": [],
            "liveNow": false,
            "panels": [
              {
                "datasource": {
                  "type": "prometheus",
                  "uid": "prometheus"
                },
                "fieldConfig": {
                  "defaults": {
                    "color": {
                      "mode": "thresholds"
                    },
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "green",
                          "value": null
                        },
                        {
                          "color": "red",
                          "value": 1
                        }
                      ]
                    }
                  },
                  "overrides": []
                },
                "gridPos": {
                  "h": 8,
                  "w": 12,
                  "x": 0,
                  "y": 0
                },
                "id": 1,
                "options": {
                  "orientation": "auto",
                  "reduceOptions": {
                    "calcs": [
                      "lastNotNull"
                    ],
                    "fields": "",
                    "values": false
                  },
                  "showThresholdLabels": false,
                  "showThresholdMarkers": true
                },
                "pluginVersion": "10.0.3",
                "targets": [
                  {
                    "datasource": {
                      "type": "prometheus",
                      "uid": "prometheus"
                    },
                    "expr": "sum(increase(kube_pod_container_status_restarts_total[5m])) by (pod)",
                    "refId": "A"
                  }
                ],
                "title": "Pod Restarts (5m)",
                "type": "gauge"
              }
            ],
            "refresh": "5s",
            "schemaVersion": 38,
            "style": "dark",
            "tags": [],
            "templating": {
              "list": []
            },
            "time": {
              "from": "now-6h",
              "to": "now"
            },
            "timepicker": {},
            "timezone": "",
            "title": "Pod Restarts",
            "version": 0,
            "weekStart": ""
          }

alertmanager:
  enabled: true
  config:
    global:
      resolve_timeout: 5m
      slack_api_url: '${SLACK_WEBHOOK_URL}'  # Slack webhook URL'si environment variable olarak alÄ±nacak
    route:
      group_by: ['job']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'slack-notifications'
      routes:
      - match:
          alertname: PodRestarting
        receiver: 'slack-notifications'
    receivers:
    - name: 'slack-notifications'
      slack_configs:
      - channel: '#alerts'
        send_resolved: true
        title: '{{ .GroupLabels.alertname }}'
        text: "{{ range .Alerts }}*Alert:* {{ .Annotations.summary }}\n*Description:* {{ .Annotations.description }}\n*Severity:* {{ .Labels.severity }}\n{{ end }}"

alerting:
  enabled: true
  rules:
    - name: PodRestartAlert
      rules:
      - alert: PodRestarting
        expr: increase(kube_pod_container_status_restarts_total[1h]) > 0
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: Pod {{ $labels.pod }} is restarting
          description: Pod {{ $labels.pod }} has restarted {{ $value }} times in the last hour 